# set travis distribution
dist: xenial

# no email notifications
notifications:
  email: false

# enable apt module to update packages:
addons:
  apt:
    update: true

  # go is the primary language
language: go

# go version to use
go:
- '1.12'

# enable docker for xgo and building docker containers
services:
- docker

# explicit import path
go_import_path: github.com/chrisruffalo/gudgeon

# establish that go modules are in use
env:
- GO111MODULE=on

before_install:
  - export GO111MODULE=on
  - export GO112MODULE=on
  # export versions into a format compatible with make file  
  - export VERSION=${TRAVIS_TAG}
  - export LONGVERSION=$VERSION
  - export NUMBER=$(echo "$VERSION" | sed -r -e 's/([^0-9.-]*)?-?v?([0-9.]*)-?([^-]*)?-?([^-]*)?/\2/')
  # if none of these worked or had values, unset so make can do it
  - if [[ "" == "$VERSION" ]]; then unset VERSION; fi
  - if [[ "" == "$LONGVERSION" ]]; then unset LONGVERSION; fi
  - if [[ "" == "$NUMBER" ]]; then unset NUMBER; fi
  # debug
  - echo "VERSION=${VERSION}"
  - echo "LONGVERSION=${LONGVERSION}"
  - echo "NUMBER=${NUMBER}"

# make full use of cache.
before_script:
  # announce versions (so that we can debug from here if something is wrong, really)
  - make announce
  # install dependencies
  - sudo apt-get install -y --no-install-recommends ruby ruby-dev build-essential rpm libsqlite3-dev gcc-multilib g++-multilib npm
  - gem install --no-ri --no-rdoc fpm
  # install node 10
  - curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
  - sudo apt-get install -y nodejs
  # install newer version of npm
  - sudo npm install -g npm
  # pull xgo container and build local version
  - travis_retry travis_wait docker pull karalabe/xgo-1.12
  # prepare build environment
  - travis_retry travis_wait make prepare
  - travis_retry travis_wait make npm
  # more debug of installed tools
  - node_modules/.bin/webpack --version
  - node_modules/.bin/webpack-cli --version

  # the script needs to build the binaries to be successful
script:
  - travis_retry make test
  # get third-party resources for build
  - make webpack
  # build binaries
  - make GOOS_LIST="linux" GOARCH_LIST="386 amd64" build
  - travis_retry travis_wait make buildxgo

before_deploy:
  # package targets
  - OS_BIN_ARCH=amd64 OS_ARCH=x86_64 make rpm
  - OS_BIN_ARCH=386 OS_ARCH=i686 make rpm
  - OS_BIN_ARCH=amd64 OS_ARCH=x86_64 make deb
  - OS_BIN_ARCH=386 OS_ARCH=i386 make deb
  - BINARY_TARGET=gudgeon-linux-arm-5 OS_ARCH=arm5 make rpm
  - BINARY_TARGET=gudgeon-linux-arm-5 OS_ARCH=arm5 make deb
  - BINARY_TARGET=gudgeon-linux-arm-6 OS_ARCH=arm6 make rpm
  - BINARY_TARGET=gudgeon-linux-arm-6 OS_ARCH=arm6 make deb
  # removed mips targets until they become viable
  #- BINARY_TARGET=gudgeon-linux-mips OS_ARCH=mips make tar
  #- BINARY_TARGET=gudgeon-linux-mipsle OS_ARCH=mipsle make tar
  # make docker build(s)
  - BINARY_TARGET=gudgeon-linux-amd64 make docker
  # push build(s) to docker cloud
  - docker login --username="$DOCKER_USERNAME" --password="$DOCKER_PASSWORD"
  - make dockerpush
  - DOCKER_TAG=latest make dockerpush

deploy:
  provider: releases
  api_key: "$GITHUB_OAUTH_TOKEN"
  file_glob: true
  file: build/gudgeon*
  skip_cleanup: true
  overwrite: true
  on:
    tags: true