language: go

# enable docker for xgo
services:
- docker

# go version to use
go:
- '1.12'

# explicit import path
go_import_path: github.com/chrisruffalo/gudgeon

# establish that go modules are in use
env:
- GO111MODULE=on

# export versions into a format compatible with make file
before_install:
  - export GO111MODULE=on
  - export GO112MODULE=on
  - export VERSION=${TRAVIS_TAG:$(git describe --tags $(git rev-list --tags --max-count=1) || echo "${TRAVIS_TAG}")}
  - export LONGVERSION=$VERSION
  - export NUMBER=$(echo "$VERSION" | sed -r -e 's/([^0-9.-]*)?-?v?([0-9.]*)-?([^-]*)?-?([^-]*)?/\2/')
  - if [[ ""=="$NUMBER" ]]; then export NUMBER=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "${TRAVIS_TAG}" | sed -r -e 's/([^0-9.-]*)?-?v?([0-9.]*)-?([^-]*)?-?([^-]*)?/\2/'); fi

# only need the current depth
git:
  depth: 1

# no email notifications
notifications:
  email: false

# make full use of cache.
before_script:
  # install dependencies
  - sudo apt-get update
  - sudo apt-get install -y upx-ucl ruby ruby-dev build-essential rpm libsqlite3-dev gcc-multilib and g++-multilib
  - gem install --no-ri --no-rdoc fpm
  # pull xgo container
  - travis_wait docker pull karalabe/xgo-latest
  # prepare build environment
  - travis_wait make prepare  

# the script needs to build the binaries to be successful
script:
  - make test
  # get third-party resources for build
  - make download
  # build binaries
  - make GOOS_LIST="linux" GOARCH_LIST="386 amd64" build
  - travis_wait make buildxgo

before_deploy:
  # compress binaries
  - make compress
  # package targets
  - OS_BIN_ARCH=amd64 OS_ARCH=x86_64 make rpm
  - OS_BIN_ARCH=386 OS_ARCH=i686 make rpm
  - OS_BIN_ARCH=amd64 OS_ARCH=x86_64 make deb
  - OS_BIN_ARCH=386 OS_ARCH=i386 make deb
  - BINARY_TARGET=gudgeon-linux-arm-5 OS_ARCH=arm5 make rpm
  - BINARY_TARGET=gudgeon-linux-arm-5 OS_ARCH=arm5 make deb
  - BINARY_TARGET=gudgeon-linux-arm-6 OS_ARCH=arm6 make rpm
  - BINARY_TARGET=gudgeon-linux-arm-6 OS_ARCH=arm6 make deb
  - BINARY_TARGET=gudgeon-linux-mips OS_ARCH=mips make tar
  # make docker build(s)
  - BINARY_TARGET=gudgeon-linux-amd64 make docker
  # push build(s) to docker cloud
  - docker login --username="$DOCKER_USERNAME" --password="$DOCKER_PASSWORD"
  - make dockerpush
  - DOCKER_TAG=latest make dockerpush

deploy:
  provider: releases
  api_key: "$GITHUB_OAUTH_TOKEN"
  file_glob: true
  file: build/gudgeon*
  skip_cleanup: true
  overwrite: true
  on:
    tags: true